POPULATING THE TABLES


The Datahandler Table
---------------------

Example:
+----------------+--------------+------------------------------+----------------------+------+
| datahandler_id | iohandler_id | method                       | argument             | rank |
+----------------+--------------+------------------------------+----------------------+------+
|              1 |            1 | get_BioDatabaseAdaptor       |                      |    1 |
|              2 |            1 | fetch_BioSeqDatabase_by_name | ensembl_human_28_pep |    2 |
|              3 |            1 | get_Seq_by_id                | INPUT                |    3 |
|              4 |            2 | get_ScoreAdaptor             |                      |    1 |
|              5 |            2 | store_by_PID                 | OUTPUT               |    2 |
|              6 |            3 | get_ScoreAdaptor             |                      |    1 |
|              7 |            3 | fetch_by_dbID                | INPUT                |    2 |
|              8 |            4 | get_FamilyAdaptor            |                      |    1 |
|              9 |            4 | store                        | OUTPUT               |    2 |
+----------------+--------------+------------------------------+----------------------+------+

datahandler_id:
The datahandler_id is different for each method

iohandler_id:
Each iohandler represents a series of steps that gets the input or writes the output etc.
Hence the iohandler_id for methods involved in getting the input for the runnable will be different from the iohandler_id for methods involved in passing the output from the runnable.

method:
It is required to pass in the methods that implements each step of the iohandler.
Example :To use Genscan Runnable in the pipeline, we need to pass a Bio::PrimarySeq object as the input to the runnable.
method 1:DBAdaptor->get_contig(id)  (get_contig gives a contig(no argument for this method)
method 2:contig1->perl_primary_seq  (perl_primary_seq gives a Bio::PrimarySeq object(argument for this will be INPUT as were passing this in.)

argument:
The argument will be INPUT if the method's return is the input to the runnable.
The argument will be OUTPUT if the method stores the output.

rank:
Rank refers to the sequence of steps for each iohandler.

===========================================================================================================================================

The Analysis Table
------------------

Example:
+-------------+---------------------+------------+-----------------------------------+---------+------------+-------------------------------------+----------+-----------------+--------------+-------------------------+------------+-------------+---------------+
| analysis_id | created             | logic_name | runnable                          | db      | db_version | db_file
       | program  | program_version | program_file | parameters              | gff_source | gff_feature | node_group_id |
+-------------+---------------------+------------+-----------------------------------+---------+------------+-------------------------------------+----------+-----------------+--------------+-------------------------+------------+-------------+---------------+
|           1 | 2002-06-18 10:56:29 | Genscan    | Bio::Pipeline::Runnable::Blast    | All_Pep | june_02    | /data0/family_run_17_6_2002/all_pep | blastall | 2.0             | blastall     | -p blastp -e 0.00001    |            |             |             0 |
|           2 | 2002-06-21 00:15:53 | TribeMCL   | Bio::Pipeline::Runnable::TribeMCL |         |            |
       |          |                 |              | -inputtype pairs -I 3.0 |            |             |             0 |
+-------------+---------------------+------------+-----------------------------------+---------+------------+-------------------------------------+----------+-----------------+--------------+-------------------------+------------+-------------+---------------+


analysis_id:
Each analysis has a unique analysis_id

created:
logic_name: 

runnable:
The runnable corresponding to this analysis

db:
database(if the runnbale requires a database e.g Blast)

program:
The binary program thats being used for that analysis

parameters:
The parameters that the runnable/program requires

gff_source:

Gff_feature:

===========================================================================================================================================

The analysis_output_handler Table
---------------------------------

Example:
+-------------+--------------+
| analysis_id | iohandler_id |
+-------------+--------------+
|           1 |            2 |
|           2 |            4 |
+-------------+--------------+

Note: For each of the analysis_id the corresponding iohandler_id is populated (where the argument is OUTPUT in the datahandler table)


===========================================================================================================================================
The dbadaptor Table
-------------------

Example:
+--------------+----------------+--------+-------+------+------+-------------------------+
| dbadaptor_id | dbname         | driver | host  | user | pass | module                  |
+--------------+----------------+--------+-------+------+------+-------------------------+
|            1 | biosql_june_02 | mysql  | mysql | root |      | Bio::DB::SQL::DBAdaptor |
+--------------+----------------+--------+-------+------+------+-------------------------+

dbadaptor_id:
The id of the dbadaptor

dbname:
The database name(database to get the input/ write the output e.g ensembl_120)

driver:

host:

user:

pass:

module:
The adaptor for the database(dbname)

===========================================================================================================================================

The input Table
---------------

Example:
+----------+-----------------+--------+--------------+
| input_id | name            | job_id | iohandler_id |
+----------+-----------------+--------+--------------+
|        1 | ENSP00000000233 |      1 |            1 |
|        2 | ENSP00000000412 |      2 |            1 |
+----------+-----------------+--------+--------------+

Note: The user has to populate this table with the inputs for the analysis.

input_id:

name:

job_id:

iohandler_id:

===========================================================================================================================================

The iohandler Table
-------------------

Example:
+--------------+--------------+--------+
| iohandler_id | dbadaptor_id | type   |
+--------------+--------------+--------+
|            1 |            1 | INPUT  |
|            2 |            1 | OUTPUT |
|            3 |            1 | INPUT  |
|            4 |            1 | OUTPUT |
+--------------+--------------+--------+

Note: The dbadaptor_id is unique for each dbadaptor(hence database as each database has unique dbadaptor)

type:
The type of the iohandler

===========================================================================================================================================
The job Table
-------------

Example:
+--------+------------+-------------+----------+-------------+-------------+-------------+--------+-------+---------------------+-------------+
| job_id | process_id | analysis_id | queue_id | stdout_file | stderr_file | object_file | status | stage | time                | retry_count |
+--------+------------+-------------+----------+-------------+-------------+-------------+--------+-------+---------------------+-------------+
|      1 | NEW        |           1 |        0 |             |             |             | NEW    |       | 0000-00-00 00:00:00 |
 0 |
|      2 | NEW        |           1 |        0 |             |             |             | NEW    |       | 0000-00-00 00:00:00 |
 0 |
+--------+------------+-------------+----------+-------------+-------------+-------------+--------+-------+---------------------+-------------+

job_id:

process_id:

analysis_id:

queue_id:

stdout_file:

stderr_file:

object_file:

status:

stage:

time:

retry_count:


===========================================================================================================================================
The new_input_ioh Table
-----------------------

Example:
+-------------+--------------+
| analysis_id | iohandler_id |
+-------------+--------------+
|           2 |            3 |
+-------------+--------------+

Note: 


===========================================================================================================================================
The rule Table
--------------

Example:
+---------+---------+------+-----------------------+
| rule_id | current | next | action                |
+---------+---------+------+-----------------------+
|       1 |       1 |    2 | WAITFORALL_AND_UPDATE |
+---------+---------+------+-----------------------+   

rule_id:

current:

next:

action:

===========================================================================================================================================


